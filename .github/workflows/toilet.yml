name: Enable RDP with Pinggy

on:
  workflow_dispatch:

jobs:
  enable-rdp:
    runs-on: windows-latest
    steps:
      - name: üîë Enable Terminal Services (RDP)
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

      - name: üîê Set password for runneradmin
        run: |
          net user runneradmin "P@ssw0rd!"
          
      - name: üöÄ Start Pinggy SSH in Background with Log Capture
        shell: powershell
        run: |
          $log = "pinggy.log"
          $psi = New-Object System.Diagnostics.ProcessStartInfo
          $psi.FileName = "ssh"
          $psi.Arguments = "-p 443 -R0:localhost:3389 -o StrictHostKeyChecking=no -o ServerAliveInterval=30 t5w9T4lcjRY+tcp@free.pinggy.io"
          $psi.RedirectStandardOutput = $true
          $psi.RedirectStandardError = $true
          $psi.UseShellExecute = $false
          $psi.CreateNoWindow = $true

          $process = New-Object System.Diagnostics.Process
          $process.StartInfo = $psi
          $process.Start() | Out-Null

          $reader = $process.StandardOutput
          $found = $false
          $timeout = [datetime]::Now.AddSeconds(20)

          while (-not $reader.EndOfStream -and [datetime]::Now -lt $timeout) {
              $line = $reader.ReadLine()
              Write-Host $line

              if ($line -match "https:\/\/[^\s]+\.pinggy\.io") {
                  Write-Host "Link found: $($matches[0])"
                  $found = $true
                  break
              }
          }

          if (-not $found) {
              Write-Host "Pinggy link not found after timeout."
          }

          try {
              $process.Kill()
              Write-Host "SSH process terminated."
          } catch {
              Write-Host "SSH process already exited."
          }

      - name: ‚úÖ Done
        run: echo skibidi
